<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nobody.nobodyplace.mapper.CSGOItemMapper">

    <select id="getByFilterInfo" resultType="com.nobody.nobodyplace.pojo.entity.CSGOItem">
        select * from csgo_item
            <where>
                <if test="name != null and name != ''">
                    name_cn like concat('%',#{name},'%')
                </if>
                <if test="mainType != null and mainType != ''">
                    and main_type = #{mainType}
                </if>
                <if test="subType != null and subType != ''">
                    and sub_type = #{subType}
                </if>
                <if test="exterior != null and exterior != ''">
                    and exterior = #{exterior}
                </if>

            </where>

    </select>

    <insert id="insertInventoryItem">
        insert into user_csgo_inventory (user_id, item_id, bought_time, bought_price, update_time)
        values (#{userId}, #{itemId}, #{boughtTime}, #{boughtPrice}, #{updateTime})
    </insert>

    <select id="getInventoryItem" resultType="com.nobody.nobodyplace.pojo.vo.CSGOInventoryVO">
        select inv.id id, items.item_id itemId, items.name_cn nameCN, items.name_eng nameEng, items.pic_url picUrl, items.exterior exterior,
            inv.bought_time boughtTime, inv.update_time updateTime, inv.bought_price boughtPrice, items.main_type mainType, items.sub_type subType
        from user_csgo_inventory inv, csgo_item items
        where items.item_id = inv.item_id and inv.user_id = #{userId}
        order by updateTime desc
    </select>

    <select id="getUserAllInventory" resultType="com.nobody.nobodyplace.pojo.vo.CSGOInventoryVO">
        select inv.id id, items.item_id itemId, items.name_cn nameCN, items.name_eng nameEng, items.pic_url picUrl, items.exterior exterior,
               inv.bought_time boughtTime, inv.update_time updateTime, inv.bought_price boughtPrice, items.main_type mainType, items.sub_type subType
        from user_csgo_inventory inv, csgo_item items
        where items.item_id = inv.item_id and inv.user_id = #{userId}
        order by updateTime desc
    </select>

    <delete id="deleteInventoryItem">
        delete from user_csgo_inventory where id = #{itemId} and user_id = #{userId}
    </delete>

    <select id="getInventoryItemBoughtPrice" resultType="_float">
        select bought_price from user_csgo_inventory where id = #{itemId} and user_id = #{userId}
    </select>

    <insert id="insertItemHistoryPrices">
        insert ignore into csgo_history_price (item_id, price, time)
        values
        <foreach collection="historyPrices" item="historyPrice" separator =",">
            (#{historyPrice.itemId},
             #{historyPrice.price},
             #{historyPrice.time})
        </foreach>
    </insert>

    <select id="getItemHistoryPrices" resultType="com.nobody.nobodyplace.pojo.dto.CSGOItemHistoryPriceDTO">
        select item_id itemId, price price, time `time` from csgo_history_price
        where item_id = #{itemId}
        and `time` between STR_TO_DATE(#{from}, '%Y-%m-%d %H:%i:%s') and STR_TO_DATE(#{to}, '%Y-%m-%d %H:%i:%s') order by `time` desc
    </select>

    <select id="getItemLatestPrice" resultType="com.nobody.nobodyplace.pojo.dto.CSGOItemHistoryPriceDTO">
        select item_id itemId, price price, time `time` from csgo_history_price
        where item_id = #{itemId}
        order by `time` desc
        limit 1
    </select>

    <select id="getItemHistoryPricesRecent" resultType="com.nobody.nobodyplace.pojo.dto.CSGOItemHistoryPriceDTO">
        select p.item_id itemId, p.price price, p.time `time` from csgo_history_price p where item_id = #{itemId} order by time desc limit 100
    </select>

    <select id="getRanking" resultType="com.nobody.nobodyplace.pojo.vo.CSGORankingVO">
        SELECT i.user_id AS userId, u.`name`, SUM(bought_price) AS ownPrice
        FROM user_csgo_inventory i
        LEFT JOIN `user` u ON u.id = i.user_id
        GROUP BY i.user_id
        ORDER BY ownPrice DESC
    </select>

</mapper>
